name: Manual sync of folder contents to replace BiDi Sync repo

on:
  workflow_dispatch:
    inputs:
      primary_repo_folder:
        description: "Folder in primary repository with docs to sync"
        required: true
        default: "/ReadMe"
      bidi_sync_repo:
        description: "Sync repository to push documentation"
        required: true
      bidi_sync_folder:
        description: "Destination folder in sync repository (leave empty for root)"
        required: false
        default: ""
      bidi_sync_branch:
        description: "Target branch in sync repository"
        required: true
        default: "v1.0"
      access_token:
        description: "GitHub token with repository access"
        required: true
      git_user_name:
        description: "Git user name for commits"
        required: false
        default: "ReadMe GitHub Actions Bot"
      git_user_email:
        description: "Git user email for commits"
        required: false
        default: "noreply@readme.com"

permissions:
  contents: read

jobs:
  sync-docs:
    runs-on: ubuntu-latest

    env:
      PRIMARY_REPO_PATH: readme-primary-repo
      SYNC_REPO_PATH: readme-sync-repo

    steps:
    - name: Checkout primary repository
      uses: actions/checkout@v4
      with:
        path: ${{ env.PRIMARY_REPO_PATH }}
        ref: ${{ github.ref }}

    - name: Checkout BiDi Sync repository
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.bidi_sync_repo }}
        path: ${{ env.SYNC_REPO_PATH }}
        token: ${{ inputs.access_token }}
        ref: ${{ inputs.bidi_sync_branch }}

    - name: Check if branch exists
      run: |
        cd ${{ env.SYNC_REPO_PATH }}
        if ! git ls-remote --heads origin ${{ inputs.bidi_sync_branch }} | grep -q ${{ inputs.bidi_sync_branch }}; then
          echo "Creating new branch: ${{ inputs.bidi_sync_branch }}"
          git checkout -b ${{ inputs.bidi_sync_branch }}
          git push origin ${{ inputs.bidi_sync_branch }}
        fi
        git checkout ${{ inputs.bidi_sync_branch }}

    - name: Check for changes
      id: check_changes
      run: |
        DEST_PATH="${{ env.SYNC_REPO_PATH }}/${{ inputs.bidi_sync_folder }}"
        mkdir -p "$DEST_PATH"
        if [ -n "$(diff -r ${{ env.PRIMARY_REPO_PATH }}/${{ inputs.primary_repo_folder }} $DEST_PATH)" ]; then
          echo "changes_detected=true" >> $GITHUB_OUTPUT
        else
          echo "changes_detected=false" >> $GITHUB_OUTPUT
        fi

    - name: Sync documentation
      if: steps.check_changes.outputs.changes_detected == 'true'
      run: |
        DEST_PATH="${{ env.SYNC_REPO_PATH }}/${{ inputs.bidi_sync_folder }}"
        mkdir -p "$DEST_PATH"
        if [ -n "${{ inputs.bidi_sync_folder }}" ]; then
          find "$DEST_PATH" -mindepth 1 -delete
        else
          find ${{ env.SYNC_REPO_PATH }} -mindepth 1 ! -regex '^${{ env.SYNC_REPO_PATH }}/.git.*' -delete
        fi
        cp -r ${{ env.PRIMARY_REPO_PATH }}/${{ inputs.primary_repo_folder }}/* "$DEST_PATH/"
        cd ${{ env.SYNC_REPO_PATH }}
        git config user.name "${{ inputs.git_user_name }}"
        git config user.email "${{ inputs.git_user_email }}"
        git add -A
        if git diff --cached --quiet; then
          echo "No changes to commit."
          exit 0
        fi
        git commit -m "Sync documentation from primary repo. Triggered by ${GITHUB_SHA} Branch: ${GITHUB_REF#refs/heads/} Workflow: ${GITHUB_WORKFLOW}"
        git push origin ${{ inputs.bidi_sync_branch }}
